#include <avr/io.h>
#include <avr/interrupt.h>
#include"util/delay.h"


unsigned char seconds=0,minutes=0,hours=0;

void display();

unsigned char flag = 0;


ISR(TIMER1_COMPA_vect)
{
	flag = 1;

}



void Timer1_Init()
{
	TCNT1 = 0 ;  //Setting Initial Value For The Timer
	OCR1A =870;  // Compare Match Value Each ONE SECOND
	TIMSK |= (1<<OCIE1A) ;   // Enable The Interrupt For Timer1 Output Compare A Match Interrupt Enable
	TCCR1A =(1<<FOC1A);
	TCCR1B = (1<<CS12)|(1<<CS10) | (1<<WGM12) ;
	SREG |= (1<<7);
}












ISR(INT0_vect)
{
seconds = 0;
minutes = 0;
hours = 0;
}



void INT0_Init()
{
	GICR |= (1<<INT0);
	MCUCR |= (1<<ISC01) ;
	MCUCR&=~(1<<ISC00);
	DDRD&=(~(1<<PD2));				//configuring PD2 to be input
	PORTD|=(1<<PD2);				//enabling internal pull up resistance

}





ISR(INT1_vect)
{
	if(PIND & (1<<3))
	{
		TIMSK &= ~(1<<OCIE1A) ;
	}
	else
	{
		TIMSK |= (1<<OCIE1A) ;
	}
}



void INT1_Init()
{
	DDRD&= (~(1<<PD3));				//configuring PD3 to be input

	GICR|=(1<<INT1);				//INT1 module interrupt enabled
	MCUCR|=(1<<ISC11)|(1<<ISC10);	//INT1 on rising edge
	SREG |=(1<<7);
}


ISR(INT2_vect)
{
	if(!(PINB & (1<<2)) )
	{
		TIMSK |= (1<<OCIE1A) ;
	}
	else
	{
		TIMSK &= ~(1<<OCIE1A);
	}
}

void INT2_Init()
{
	DDRB&=~(1<<PB2);				//configuring PB2 to be input
	PORTB|=(1<<PB2);			//enabling internal pull up resistance
	GICR|=(1<<1<<INT2);				//enabling INT2 interrupt
	MCUCSR&=~(1<<ISC2);				//INT2 on falling edge
	SREG |= (1<<7);
}
void display()
{
	PORTA = (1<<0);
	PORTC = seconds % 10;
	_delay_ms(2);
	PORTA = (1<<1);
	PORTC = seconds / 10;
	_delay_ms(2);
	PORTA = (1<<2);
	PORTC = minutes % 10;
	_delay_ms(2);
	PORTA = (1<<3);
	PORTC = minutes / 10;
	_delay_ms(2);
	PORTA = (1<<4);
	PORTC = hours % 10;
	_delay_ms(2);
	PORTA = (1<<5);
	PORTC = hours / 10;
	_delay_ms(2);

}




int main(void)
{

	DDRC=0x0F;
	PORTC&=~0x0F;
	DDRA|=0x3F;
	PORTA&=~0x3F;
	Timer1_Init();
	INT0_Init();
	INT1_Init();
	INT2_Init();
	for (;;)
	{
		if(flag == 1)
		{
			seconds ++ ;
				if(seconds == 60)
				{
					seconds = 0;
					minutes ++ ;
				}
				if(minutes == 60)
				{
					minutes = 0;
					hours ++ ;
				}
				if(hours == 24)
				{

					hours = 0;
				}
				flag = 0;
		}

			display();

	}
}
